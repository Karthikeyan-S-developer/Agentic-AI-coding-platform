{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Downloads\\\\Agentic AI coding platform\\\\client\\\\src\\\\pages\\\\ChallengeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Grid, Paper, Typography, Button, Box, CircularProgress, Alert, Divider, Chip, List, ListItem, ListItemText, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';\nimport { getChallengeById as getChallenge, submitSolution } from '../store/slices/challengeSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChallengeDetails = () => {\n  _s();\n  var _currentChallenge$cre, _currentChallenge$eva, _currentChallenge$sub, _currentChallenge$sub2, _currentChallenge$cre2;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    currentChallenge,\n    loading,\n    error\n  } = useSelector(state => state.challenges);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [openSubmitDialog, setOpenSubmitDialog] = useState(false);\n  const [submission, setSubmission] = useState({\n    solutionUrl: '',\n    description: ''\n  });\n  useEffect(() => {\n    dispatch(getChallenge(id));\n  }, [dispatch, id]);\n  const handleSubmit = async () => {\n    try {\n      await dispatch(submitSolution({\n        challengeId: id,\n        ...submission\n      })).unwrap();\n      setOpenSubmitDialog(false);\n      // Refresh challenge data to show new submission\n      dispatch(getChallenge(id));\n    } catch (err) {\n      // Error handling is done through Redux state\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentChallenge) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"Challenge not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              children: currentChallenge.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: currentChallenge.status,\n              color: currentChallenge.status === 'OPEN' ? 'success' : 'default'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            paragraph: true,\n            children: currentChallenge.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Challenge Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Prize Pool\",\n                secondary: `$${currentChallenge.prizeAmount}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Deadline\",\n                secondary: formatDate(currentChallenge.deadline)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Created By\",\n                secondary: (_currentChallenge$cre = currentChallenge.creator) === null || _currentChallenge$cre === void 0 ? void 0 : _currentChallenge$cre.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Evaluation Criteria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: (_currentChallenge$eva = currentChallenge.evaluationCriteria) === null || _currentChallenge$eva === void 0 ? void 0 : _currentChallenge$eva.map((criteria, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: criteria.name,\n                secondary: criteria.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"Submissions (\", ((_currentChallenge$sub = currentChallenge.submissions) === null || _currentChallenge$sub === void 0 ? void 0 : _currentChallenge$sub.length) || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), ((_currentChallenge$sub2 = currentChallenge.submissions) === null || _currentChallenge$sub2 === void 0 ? void 0 : _currentChallenge$sub2.length) > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            children: currentChallenge.submissions.map((submission, index) => {\n              var _submission$user;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: (_submission$user = submission.user) === null || _submission$user === void 0 ? void 0 : _submission$user.name,\n                  secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.primary\",\n                      children: submission.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      children: [\"Submitted on: \", formatDate(submission.createdAt)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"No submissions yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => navigate(-1),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), currentChallenge.status === 'OPEN' && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => setOpenSubmitDialog(true),\n              disabled: ((_currentChallenge$cre2 = currentChallenge.creator) === null || _currentChallenge$cre2 === void 0 ? void 0 : _currentChallenge$cre2._id) === (user === null || user === void 0 ? void 0 : user._id),\n              children: \"Submit Solution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openSubmitDialog,\n      onClose: () => setOpenSubmitDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Submit Solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Solution URL\",\n          name: \"solutionUrl\",\n          value: submission.solutionUrl,\n          onChange: e => setSubmission({\n            ...submission,\n            solutionUrl: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Description\",\n          name: \"description\",\n          multiline: true,\n          rows: 4,\n          value: submission.description,\n          onChange: e => setSubmission({\n            ...submission,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenSubmitDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeDetails, \"fOuLvfNaYipewI5d/DKYIpMAE5M=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = ChallengeDetails;\nexport default ChallengeDetails;\nvar _c;\n$RefreshReg$(_c, \"ChallengeDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useDispatch","useSelector","Container","Grid","Paper","Typography","Button","Box","CircularProgress","Alert","Divider","Chip","List","ListItem","ListItemText","Dialog","DialogTitle","DialogContent","DialogActions","TextField","getChallengeById","getChallenge","submitSolution","jsxDEV","_jsxDEV","Fragment","_Fragment","ChallengeDetails","_s","_currentChallenge$cre","_currentChallenge$eva","_currentChallenge$sub","_currentChallenge$sub2","_currentChallenge$cre2","id","navigate","dispatch","currentChallenge","loading","error","state","challenges","user","auth","openSubmitDialog","setOpenSubmitDialog","submission","setSubmission","solutionUrl","description","handleSubmit","challengeId","unwrap","err","formatDate","dateString","Date","toLocaleDateString","year","month","day","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","p","container","spacing","item","xs","alignItems","mb","variant","component","title","label","status","color","paragraph","md","gutterBottom","primary","secondary","prizeAmount","deadline","creator","name","evaluationCriteria","map","criteria","index","my","submissions","length","_submission$user","createdAt","onClick","disabled","_id","open","onClose","maxWidth","fullWidth","margin","required","value","onChange","e","target","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/karth/Downloads/Agentic AI coding platform/client/src/pages/ChallengeDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  CircularProgress,\r\n  Alert,\r\n  Divider,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField\r\n} from '@mui/material';\r\nimport { getChallengeById as getChallenge, submitSolution } from '../store/slices/challengeSlice';\r\n\r\nconst ChallengeDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { currentChallenge, loading, error } = useSelector(state => state.challenges);\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n  const [openSubmitDialog, setOpenSubmitDialog] = useState(false);\r\n  const [submission, setSubmission] = useState({\r\n    solutionUrl: '',\r\n    description: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getChallenge(id));\r\n  }, [dispatch, id]);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await dispatch(submitSolution({ challengeId: id, ...submission })).unwrap();\r\n      setOpenSubmitDialog(false);\r\n      // Refresh challenge data to show new submission\r\n      dispatch(getChallenge(id));\r\n    } catch (err) {\r\n      // Error handling is done through Redux state\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container sx={{ mt: 4 }}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!currentChallenge) {\r\n    return (\r\n      <Container sx={{ mt: 4 }}>\r\n        <Alert severity=\"info\">Challenge not found</Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ mt: 4 }}>\r\n      <Paper sx={{ p: 4 }}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n              <Typography variant=\"h4\" component=\"h1\">\r\n                {currentChallenge.title}\r\n              </Typography>\r\n              <Chip\r\n                label={currentChallenge.status}\r\n                color={currentChallenge.status === 'OPEN' ? 'success' : 'default'}\r\n              />\r\n            </Box>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n              {currentChallenge.description}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Challenge Details\r\n            </Typography>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Prize Pool\"\r\n                  secondary={`$${currentChallenge.prizeAmount}`}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Deadline\"\r\n                  secondary={formatDate(currentChallenge.deadline)}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"Created By\"\r\n                  secondary={currentChallenge.creator?.name}\r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Evaluation Criteria\r\n            </Typography>\r\n            <List>\r\n              {currentChallenge.evaluationCriteria?.map((criteria, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={criteria.name}\r\n                    secondary={criteria.description}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Divider sx={{ my: 2 }} />\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Submissions ({currentChallenge.submissions?.length || 0})\r\n            </Typography>\r\n            {currentChallenge.submissions?.length > 0 ? (\r\n              <List>\r\n                {currentChallenge.submissions.map((submission, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText\r\n                      primary={submission.user?.name}\r\n                      secondary={\r\n                        <>\r\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                            {submission.description}\r\n                          </Typography>\r\n                          <br />\r\n                          <Typography component=\"span\" variant=\"body2\">\r\n                            Submitted on: {formatDate(submission.createdAt)}\r\n                          </Typography>\r\n                        </>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                No submissions yet\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n              <Button variant=\"outlined\" onClick={() => navigate(-1)}>\r\n                Back\r\n              </Button>\r\n              {currentChallenge.status === 'OPEN' && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setOpenSubmitDialog(true)}\r\n                  disabled={currentChallenge.creator?._id === user?._id}\r\n                >\r\n                  Submit Solution\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Dialog open={openSubmitDialog} onClose={() => setOpenSubmitDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Submit Solution</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Solution URL\"\r\n            name=\"solutionUrl\"\r\n            value={submission.solutionUrl}\r\n            onChange={(e) => setSubmission({ ...submission, solutionUrl: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            multiline\r\n            rows={4}\r\n            value={submission.description}\r\n            onChange={(e) => setSubmission({ ...submission, description: e.target.value })}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenSubmitDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChallengeDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}